

←[2m2025-10-30T22:08:06.394636Z←[0m ←[32m INFO←[0m ** Quantum Consciousness Observer (Rust Edition)
←[2m2025-10-30T22:08:06.394741Z←[0m ←[32m INFO←[0m >> Building programs with variable storage, string interpolation, and function hierarchy
←[2m2025-10-30T22:08:06.394755Z←[0m ←[32m INFO←[0m >> Executing: "test_while_loop.slut"
←[2m2025-10-30T22:08:06.394883Z←[0m ←[32m INFO←[0m ** Starting with fresh quantum consciousness cache
>> Initializing variable manager with 0 cached variables
←[2m2025-10-30T22:08:06.396249Z←[0m ←[32m INFO←[0m >> Building program from your intentions...
←[2m2025-10-30T22:08:06.402572Z←[0m ←[32m INFO←[0m >> Quantum consciousness activated for: LearnToSolve
=== Interactive Math Solver ===

777
Enter target number to solve for: ++ Variable stored: 'targetNum' = 777
1
Enter first input number: ++ Variable stored: 'firstInput' = 1
3
Enter second input number: ++ Variable stored: 'secondInput' = 3

Searching for: 777 using [1, 3, ?]
The ? will be filled from cached solutions...

-- Resolved target variable 'targetNum' = 777
-- Found 3 blank placeholders (?), searching for cached solutions...
   >> Target-aware selection enabled for target: 777
   - Found computed solution: secondInput = 3 (from: userIn("Enter second input number"))
   - Available cached solutions (deduplicated): [3.0]
   + Filled ? with cached solution: 3
   >> Warning: Need 3 blanks but only have 1 cached values
   >> Some placeholders remain unfilled. Provide more concrete inputs or build up cache.
>> Target-seeking quantum mathematics for variable 'result': target=777, inputs=[3.0]
>> Observation #1 - Target: 777 for variable 'result'
-- Variable 'result' has 0 previous attempts
-- 8 untried operations available for 'result'
!! No exact match found, finding best approximation for target 777
== Best approximation: 3 ^ 3 = 27 (accuracy: 3.474903474903479%)
** Solution cached: 3 ^ 3 = 27 (accuracy: 3.474903474903479%)
   Solution time: 2.6835ms, Total time: 10.2464ms
++ Variable stored: 'result' = 27
== Solution found: 3 ^ 3 = 27 (accuracy: 3.474903474903479%)
-- Variable 'result' stored with value: 27

========================================
RESULT: 27
SOURCE: See equation above
========================================

TIP: Run again with different numbers!
     The system remembers 27 now.
Final result: 27
   Source: 3 ^ 3
←[2m2025-10-30T22:08:21.656341Z←[0m ←[32m INFO←[0m ** Program built and executed successfully!
>> Converting 1 solutions to binary format...
   Converted 1 solutions in 1.0055ms
>> Saved binary cache: 0 KB in 1.6135ms
←[2m2025-10-30T22:08:21.660424Z←[0m ←[32m INFO←[0m ** Complete!


test one end


←[2m2025-10-30T22:08:31.643881Z←[0m ←[32m INFO←[0m ** Quantum Consciousness Observer (Rust Edition)
←[2m2025-10-30T22:08:31.643934Z←[0m ←[32m INFO←[0m >> Building programs with variable storage, string interpolation, and function hierarchy
←[2m2025-10-30T22:08:31.643943Z←[0m ←[32m INFO←[0m >> Executing: "test_while_loop.slut"
←[2m2025-10-30T22:08:31.644327Z←[0m ←[32m INFO←[0m ** Loaded previous quantum states, built functions, variables, and math solutions from cache
>> Initializing variable manager with 4 cached variables
   - Restored variable 'secondInput': Number(3.0)
   - Restored variable 'firstInput': Number(1.0)
   - Restored variable 'targetNum': Number(777.0)
   - Restored variable 'result': Number(27.0)
←[2m2025-10-30T22:08:31.645188Z←[0m ←[32m INFO←[0m >> Building program from your intentions...
←[2m2025-10-30T22:08:31.650994Z←[0m ←[32m INFO←[0m >> Quantum consciousness activated for: LearnToSolve
=== Interactive Math Solver ===

777
Enter target number to solve for: ++ Variable stored: 'targetNum' = 777
5
Enter first input number: ++ Variable stored: 'firstInput' = 5
?
Enter second input number: ++ Variable stored: 'secondInput' = "?"

Searching for: 777 using [5, ?, ?]
The ? will be filled from cached solutions...

-- Resolved target variable 'targetNum' = 777
-- Found 3 blank placeholders (?), searching for cached solutions...
   >> Target-aware selection enabled for target: 777
   - Found computed solution: firstInput = 5 (from: userIn("Enter first input number"))
   - Found computed solution: result = 27 (from: 3 ^ 3)
   - Available cached solutions (deduplicated): [5.0, 27.0]
   + Filled ? with cached solution: 5
   + Filled ? with cached solution: 27
   >> Warning: Need 3 blanks but only have 2 cached values
   >> Some placeholders remain unfilled. Provide more concrete inputs or build up cache.
>> Target-seeking quantum mathematics for variable 'result': target=777, inputs=[5.0, 27.0]
>> Observation #1 - Target: 777 for variable 'result'
-- Variable 'result' has 1 previous attempts
-- 30 untried operations available for 'result'
!! No exact match found, finding best approximation for target 777
== Best approximation: 27 ^ 2 = 729 (accuracy: 93.82239382239382%)
** Solution cached: 27 ^ 2 = 729 (accuracy: 93.82239382239382%)
   Solution time: 1.4473ms, Total time: 10.8483ms
++ Variable stored: 'result' = 729
== Solution found: 27 ^ 2 = 729 (accuracy: 93.82239382239382%)
-- Variable 'result' stored with value: 729

========================================
RESULT: 729
SOURCE: See equation above
========================================

TIP: Run again with different numbers!
     The system remembers 729 now.
Final result: 729
   Source: 27 ^ 2
←[2m2025-10-30T22:08:41.385228Z←[0m ←[32m INFO←[0m ** Program built and executed successfully!
>> Converting 2 solutions to binary format...
   Converted 2 solutions in 2.6395ms
>> Saved binary cache: 0 KB in 929.9┬╡s
←[2m2025-10-30T22:08:41.390636Z←[0m ←[32m INFO←[0m ** Complete!


test two end



←[2m2025-10-30T22:11:46.271690Z←[0m ←[32m INFO←[0m ** Quantum Consciousness Observer (Rust Edition)
←[2m2025-10-30T22:11:46.271745Z←[0m ←[32m INFO←[0m >> Building programs with variable storage, string interpolation, and function hierarchy
←[2m2025-10-30T22:11:46.271755Z←[0m ←[32m INFO←[0m >> Executing: "test_while_loop.slut"
←[2m2025-10-30T22:11:46.272104Z←[0m ←[32m INFO←[0m ** Loaded previous quantum states, built functions, variables, and math solutions from cache
>> Initializing variable manager with 4 cached variables
   - Restored variable 'firstInput': Number(5.0)
   - Restored variable 'result': Number(729.0)
   - Restored variable 'targetNum': Number(777.0)
   - Restored variable 'secondInput': String("?")
←[2m2025-10-30T22:11:46.272873Z←[0m ←[32m INFO←[0m >> Building program from your intentions...
←[2m2025-10-30T22:11:46.280190Z←[0m ←[32m INFO←[0m >> Quantum consciousness activated for: LearnToSolve
=== Interactive Math Solver ===

777
Enter target number to solve for: ++ Variable stored: 'targetNum' = 777
3
Enter first input number: ++ Variable stored: 'firstInput' = 3
7
Enter second input number: ++ Variable stored: 'secondInput' = 7

Searching for: 777 using [3, 7, ?]
The ? will be filled from cached solutions...

-- Resolved target variable 'targetNum' = 777
-- Found 3 blank placeholders (?), searching for cached solutions...
   >> Target-aware selection enabled for target: 777
   - Found computed solution: firstInput = 3 (from: userIn("Enter first input number"))
   - Found computed solution: result = 729 (from: 27 ^ 2)
   - Found computed solution: secondInput = 7 (from: userIn("Enter second input number"))
   - Available cached solutions (deduplicated): [3.0, 7.0, 729.0]
   + Filled ? with cached solution: 3
   + Filled ? with cached solution: 7
   + Filled ? with cached solution: 729
>> Target-seeking quantum mathematics for variable 'result': target=777, inputs=[3.0, 7.0, 729.0]
>> Observation #1 - Target: 777 for variable 'result'
-- Variable 'result' has 2 previous attempts
-- 101 untried operations available for 'result'
!! No exact match found, finding best approximation for target 777
== Best approximation: 3 * 7 + 729 = 750 (accuracy: 96.52509652509652%)
** Solution cached: 3 * 7 + 729 = 750 (accuracy: 96.52509652509652%)
   Solution time: 736.4┬╡s, Total time: 4.1943ms
++ Variable stored: 'result' = 750
== Solution found: 3 * 7 + 729 = 750 (accuracy: 96.52509652509652%)
-- Variable 'result' stored with value: 750

========================================
RESULT: 750
SOURCE: See equation above
========================================

TIP: Run again with different numbers!
     The system remembers 750 now.
Final result: 750
   Source: 3 * 7 + 729
←[2m2025-10-30T22:12:01.653888Z←[0m ←[32m INFO←[0m ** Program built and executed successfully!
>> Converting 3 solutions to binary format...
   Converted 3 solutions in 2.8918ms
>> Saved binary cache: 0 KB in 989.6┬╡s
←[2m2025-10-30T22:12:01.658811Z←[0m ←[32m INFO←[0m ** Complete!

test three end



←[2m2025-10-30T22:12:31.130816Z←[0m ←[32m INFO←[0m ** Quantum Consciousness Observer (Rust Edition)
←[2m2025-10-30T22:12:31.130882Z←[0m ←[32m INFO←[0m >> Building programs with variable storage, string interpolation, and function hierarchy
←[2m2025-10-30T22:12:31.130903Z←[0m ←[32m INFO←[0m >> Executing: "test_while_loop.slut"
←[2m2025-10-30T22:12:31.131869Z←[0m ←[32m INFO←[0m ** Loaded previous quantum states, built functions, variables, and math solutions from cache
>> Initializing variable manager with 4 cached variables
   - Restored variable 'result': Number(750.0)
   - Restored variable 'secondInput': Number(7.0)
   - Restored variable 'firstInput': Number(3.0)
   - Restored variable 'targetNum': Number(777.0)
←[2m2025-10-30T22:12:31.134269Z←[0m ←[32m INFO←[0m >> Building program from your intentions...
←[2m2025-10-30T22:12:31.144266Z←[0m ←[32m INFO←[0m >> Quantum consciousness activated for: LearnToSolve
=== Interactive Math Solver ===

777
Enter target number to solve for: ++ Variable stored: 'targetNum' = 777
13
Enter first input number: ++ Variable stored: 'firstInput' = 13
8
Enter second input number: ++ Variable stored: 'secondInput' = 8

Searching for: 777 using [13, 8, ?]
The ? will be filled from cached solutions...

-- Resolved target variable 'targetNum' = 777
-- Found 3 blank placeholders (?), searching for cached solutions...
   >> Target-aware selection enabled for target: 777
   - Found computed solution: result = 750 (from: 3 * 7 + 729)
   - Found computed solution: secondInput = 8 (from: userIn("Enter second input number"))
   - Found computed solution: firstInput = 13 (from: userIn("Enter first input number"))
   - Available cached solutions (deduplicated): [8.0, 13.0, 750.0]
   + Filled ? with cached solution: 8
   + Filled ? with cached solution: 13
   + Filled ? with cached solution: 750
>> Target-seeking quantum mathematics for variable 'result': target=777, inputs=[8.0, 13.0, 750.0]
>> Observation #1 - Target: 777 for variable 'result'
-- Variable 'result' has 3 previous attempts
-- 100 untried operations available for 'result'
!! No exact match found, finding best approximation for target 777
== Best approximation: 8 + 13 + 750 = 771 (accuracy: 99.22779922779922%)
** Solution cached: 8 + 13 + 750 = 771 (accuracy: 99.22779922779922%)
   Solution time: 3.5155ms, Total time: 8.0888ms
++ Variable stored: 'result' = 771
== Solution found: 8 + 13 + 750 = 771 (accuracy: 99.22779922779922%)
-- Variable 'result' stored with value: 771

========================================
RESULT: 771
SOURCE: See equation above
========================================

TIP: Run again with different numbers!
     The system remembers 771 now.
Final result: 771
   Source: 8 + 13 + 750
←[2m2025-10-30T22:12:43.742227Z←[0m ←[32m INFO←[0m ** Program built and executed successfully!
>> Converting 4 solutions to binary format...
   Converted 4 solutions in 4.0018ms
>> Saved binary cache: 0 KB in 509┬╡s
←[2m2025-10-30T22:12:43.747920Z←[0m ←[32m INFO←[0m ** Complete!

test four end


←[2m2025-10-30T22:13:18.235146Z←[0m ←[32m INFO←[0m ** Quantum Consciousness Observer (Rust Edition)
←[2m2025-10-30T22:13:18.235238Z←[0m ←[32m INFO←[0m >> Building programs with variable storage, string interpolation, and function hierarchy
←[2m2025-10-30T22:13:18.235247Z←[0m ←[32m INFO←[0m >> Executing: "test_while_loop.slut"
←[2m2025-10-30T22:13:18.236307Z←[0m ←[32m INFO←[0m ** Loaded previous quantum states, built functions, variables, and math solutions from cache
>> Initializing variable manager with 4 cached variables
   - Restored variable 'result': Number(771.0)
   - Restored variable 'firstInput': Number(13.0)
   - Restored variable 'secondInput': Number(8.0)
   - Restored variable 'targetNum': Number(777.0)
←[2m2025-10-30T22:13:18.237775Z←[0m ←[32m INFO←[0m >> Building program from your intentions...
←[2m2025-10-30T22:13:18.242741Z←[0m ←[32m INFO←[0m >> Quantum consciousness activated for: LearnToSolve
=== Interactive Math Solver ===

777
Enter target number to solve for: ++ Variable stored: 'targetNum' = 777
?
Enter first input number: ++ Variable stored: 'firstInput' = "?"
?
Enter second input number: ++ Variable stored: 'secondInput' = "?"

Searching for: 777 using [?, ?, ?]
The ? will be filled from cached solutions...

-- Resolved target variable 'targetNum' = 777
-- Found 3 blank placeholders (?), searching for cached solutions...
   >> Target-aware selection enabled for target: 777
   - Found computed solution: result = 771 (from: 8 + 13 + 750)
   - Available cached solutions (deduplicated): [771.0]
   + Filled ? with cached solution: 771
   >> Warning: Need 3 blanks but only have 1 cached values
   >> Some placeholders remain unfilled. Provide more concrete inputs or build up cache.
>> Target-seeking quantum mathematics for variable 'result': target=777, inputs=[771.0]
>> Observation #1 - Target: 777 for variable 'result'
-- Variable 'result' has 4 previous attempts
-- 7 untried operations available for 'result'
!! No exact match found, finding best approximation for target 777
== Best approximation: 771 = 771 (accuracy: 99.22779922779922%)
** Solution cached: 771 = 771 (accuracy: 99.22779922779922%)
   Solution time: 5.7467ms, Total time: 9.5112ms
++ Variable stored: 'result' = 771
== Solution found: 771 = 771 (accuracy: 99.22779922779922%)
-- Variable 'result' stored with value: 771

========================================
RESULT: 771
SOURCE: See equation above
========================================

TIP: Run again with different numbers!
     The system remembers 771 now.
Final result: 771
   Source: 771
←[2m2025-10-30T22:13:24.776800Z←[0m ←[32m INFO←[0m ** Program built and executed successfully!
>> Converting 5 solutions to binary format...
   Converted 5 solutions in 2.2093ms
>> Saved binary cache: 0 KB in 554.4┬╡s
←[2m2025-10-30T22:13:24.781082Z←[0m ←[32m INFO←[0m ** Complete!

test five end



←[2m2025-10-30T22:14:16.125000Z←[0m ←[32m INFO←[0m ** Quantum Consciousness Observer (Rust Edition)
←[2m2025-10-30T22:14:16.125111Z←[0m ←[32m INFO←[0m >> Building programs with variable storage, string interpolation, and function hierarchy
←[2m2025-10-30T22:14:16.125139Z←[0m ←[32m INFO←[0m >> Executing: "test_while_loop.slut"
←[2m2025-10-30T22:14:16.125661Z←[0m ←[32m INFO←[0m ** Loaded previous quantum states, built functions, variables, and math solutions from cache
>> Initializing variable manager with 4 cached variables
   - Restored variable 'targetNum': Number(777.0)
   - Restored variable 'secondInput': String("?")
   - Restored variable 'result': Number(771.0)
   - Restored variable 'firstInput': String("?")
←[2m2025-10-30T22:14:16.126317Z←[0m ←[32m INFO←[0m >> Building program from your intentions...
←[2m2025-10-30T22:14:16.132097Z←[0m ←[32m INFO←[0m >> Quantum consciousness activated for: LearnToSolve
=== Interactive Math Solver ===

777
Enter target number to solve for: ++ Variable stored: 'targetNum' = 777
2
Enter first input number: ++ Variable stored: 'firstInput' = 2
3
Enter second input number: ++ Variable stored: 'secondInput' = 3

Searching for: 777 using [2, 3, ?]
The ? will be filled from cached solutions...

-- Resolved target variable 'targetNum' = 777
-- Found 3 blank placeholders (?), searching for cached solutions...
   >> Target-aware selection enabled for target: 777
   - Found computed solution: secondInput = 3 (from: userIn("Enter second input number"))
   - Found computed solution: result = 771 (from: 771)
   - Found computed solution: firstInput = 2 (from: userIn("Enter first input number"))
   - Available cached solutions (deduplicated): [2.0, 3.0, 771.0]
   + Filled ? with cached solution: 2
   + Filled ? with cached solution: 3
   + Filled ? with cached solution: 771
>> Target-seeking quantum mathematics for variable 'result': target=777, inputs=[2.0, 3.0, 771.0]
>> Observation #1 - Target: 777 for variable 'result'
-- Variable 'result' has 5 previous attempts
-- 102 untried operations available for 'result'
== Exact match found from untried operations: 2 * 3 + 771 = 777
** Solution cached: 2 * 3 + 771 = 777 (accuracy: 100%)
   Solution time: 125.1┬╡s, Total time: 3.4121ms
++ Variable stored: 'result' = 777
== Solution found: 2 * 3 + 771 = 777 (accuracy: 100%)
-- Variable 'result' stored with value: 777

========================================
RESULT: 777
SOURCE: See equation above
========================================

TIP: Run again with different numbers!
     The system remembers 777 now.
Final result: 777
   Source: 2 * 3 + 771
←[2m2025-10-30T22:14:21.613053Z←[0m ←[32m INFO←[0m ** Program built and executed successfully!
>> Converting 6 solutions to binary format...
   Converted 6 solutions in 4.7693ms
>> Saved binary cache: 0 KB in 1.1336ms
←[2m2025-10-30T22:14:21.620184Z←[0m ←[32m INFO←[0m ** Complete!

test six end



←[2m2025-10-30T22:14:58.985571Z←[0m ←[32m INFO←[0m ** Quantum Consciousness Observer (Rust Edition)
←[2m2025-10-30T22:14:58.985627Z←[0m ←[32m INFO←[0m >> Building programs with variable storage, string interpolation, and function hierarchy
←[2m2025-10-30T22:14:58.985645Z←[0m ←[32m INFO←[0m >> Executing: "test_while_loop.slut"
←[2m2025-10-30T22:14:58.986061Z←[0m ←[32m INFO←[0m ** Loaded previous quantum states, built functions, variables, and math solutions from cache
>> Initializing variable manager with 4 cached variables
   - Restored variable 'secondInput': Number(3.0)
   - Restored variable 'result': Number(777.0)
   - Restored variable 'firstInput': Number(2.0)
   - Restored variable 'targetNum': Number(777.0)
←[2m2025-10-30T22:14:58.986836Z←[0m ←[32m INFO←[0m >> Building program from your intentions...
←[2m2025-10-30T22:14:58.993686Z←[0m ←[32m INFO←[0m >> Quantum consciousness activated for: LearnToSolve
=== Interactive Math Solver ===

1812
Enter target number to solve for: ++ Variable stored: 'targetNum' = 1812
?
Enter first input number: ++ Variable stored: 'firstInput' = "?"
?
Enter second input number: ++ Variable stored: 'secondInput' = "?"

Searching for: 1812 using [?, ?, ?]
The ? will be filled from cached solutions...

-- Resolved target variable 'targetNum' = 1812
-- Found 3 blank placeholders (?), searching for cached solutions...
   >> Target-aware selection enabled for target: 1812
   - Found computed solution: result = 777 (from: 2 * 3 + 771)
   - Available cached solutions (deduplicated): [777.0]
   + Filled ? with cached solution: 777
   >> Warning: Need 3 blanks but only have 1 cached values
   >> Some placeholders remain unfilled. Provide more concrete inputs or build up cache.
>> Target-seeking quantum mathematics for variable 'result': target=1812, inputs=[777.0]
>> Observation #1 - Target: 1812 for variable 'result'
-- Variable 'result' has 6 previous attempts
-- 7 untried operations available for 'result'
!! No exact match found, finding best approximation for target 1812
== Best approximation: 777 = 777 (accuracy: 42.88079470198676%)
** Solution cached: 777 = 777 (accuracy: 42.88079470198676%)
   Solution time: 1.0338ms, Total time: 3.9577ms
++ Variable stored: 'result' = 777
== Solution found: 777 = 777 (accuracy: 42.88079470198676%)
-- Variable 'result' stored with value: 777

========================================
RESULT: 777
SOURCE: See equation above
========================================

TIP: Run again with different numbers!
     The system remembers 777 now.
Final result: 777
   Source: 777
←[2m2025-10-30T22:15:10.030251Z←[0m ←[32m INFO←[0m ** Program built and executed successfully!
>> Converting 7 solutions to binary format...
   Converted 7 solutions in 4.3608ms
>> Saved binary cache: 0 KB in 499.5┬╡s
←[2m2025-10-30T22:15:10.036274Z←[0m ←[32m INFO←[0m ** Complete!

test seven end