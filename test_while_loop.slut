* <main> WhileLoopTest {
    ^ observe_execution {
        speak("=== Testing While Loops ===")

        # Test 1: Simple counter
        speak("Test 1: Simple counter")
        count <> 0
        loop <> while (count < 5) {
            speak("Count: ~count~")
            count <> calc(count, 1)
        }

        # Test 2: Complex condition
        speak("Test 2: Complex condition")
        x <> 1
		y <> 30
        loop <> while (x < 100) {
		result([y]) <> randomChoice([x, 3, 2])
            if <> (y == result) {
			speak("~result~")
			speak("~y~ found at x = ~x~")
			}
        }

        # Test 3: Search pattern
        speak("Test 3: Search for target")
        found <> false
        attempts <> 0
        loop <> while (found == false) {
            num <> randomChoice([20, 21, 22, 23, 24, 25])
            attempts <> calc(attempts, 1)
            speak("Try ~attempts~: Got ~num~")

            if <> (num == 24) <else> (true) {
                found <> true
                speak("Found 24!")
            <>
                speak("Keep searching...")
            }
        }

        # Test 4: Countdown
        speak("Test 4: Countdown")
        countdown <> 10
        loop <> while (countdown > 0) {
            speak("~countdown~...")
            countdown <> calc(countdown, -1)
        }
        speak("Liftoff!")

        speak("=== All while loop tests complete ===")
    }
}
